apiVersion: v1
items:
- apiVersion: v1
  data:
    setup.sh: |-
      #!/bin/bash

      ID="${MY_POD_NAME#"kafka-local-"}"
      if [[ -f "/bitnami/kafka/data/meta.properties" ]]; then
          export KAFKA_CFG_BROKER_ID="$(grep "broker.id" "/bitnami/kafka/data/meta.properties" | awk -F '=' '{print $2}')"
      else
          export KAFKA_CFG_BROKER_ID="$((ID + 0))"
      fi

      # Configure zookeeper client

      exec /entrypoint.sh /run.sh
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: kafka-local
      meta.helm.sh/release-namespace: kafkaplaypen
    creationTimestamp: "2022-12-09T02:09:31Z"
    labels:
      app.kubernetes.io/instance: kafka-local
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kafka
      helm.sh/chart: kafka-20.0.0
    name: kafka-local-scripts
    namespace: kafkaplaypen
    resourceVersion: "1033"
    uid: 7a190277-2708-4938-93dd-f7a4a9582c0a
- apiVersion: v1
  data:
    init-certs.sh: '#!/bin/bash'
    setup.sh: |-
      #!/bin/bash

      # Execute entrypoint as usual after obtaining ZOO_SERVER_ID
      # check ZOO_SERVER_ID in persistent volume via myid
      # if not present, set based on POD hostname
      if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
          export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
      else
          HOSTNAME="$(hostname -s)"
          if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
              ORD=${BASH_REMATCH[2]}
              export ZOO_SERVER_ID="$((ORD + 1 ))"
          else
              echo "Failed to get index from hostname $HOST"
              exit 1
          fi
      fi
      exec /entrypoint.sh /run.sh
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: kafka-local
      meta.helm.sh/release-namespace: kafkaplaypen
    creationTimestamp: "2022-12-09T02:09:31Z"
    labels:
      app.kubernetes.io/component: zookeeper
      app.kubernetes.io/instance: kafka-local
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: zookeeper
      helm.sh/chart: zookeeper-11.0.0
    name: kafka-local-zookeeper-scripts
    namespace: kafkaplaypen
    resourceVersion: "1032"
    uid: 174aada8-7421-4eaf-a01d-997f91f6f50f
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBjCCAe6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwptaW5p
      a3ViZUNBMB4XDTIyMTIwNzE5MjAyMVoXDTMyMTIwNTE5MjAyMVowFTETMBEGA1UE
      AxMKbWluaWt1YmVDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM8V
      8pNWxAEvzgHn19RzK6chRNewNUdNJc40nEzdB7XedETdRNqT6HJKryhz8fEi5keJ
      BM4dKUeoe1/YjQ2Lid2BUxn512kEc4EKbWsSqthy7JCZrwjRILylfdYxpP4+kar0
      LLppAQwUyzVu2OxzhslY9KSO96IoklVcceoHYFPttC5lGT/JxTdfW/tggIqlrtpY
      jnrtAnXgSdOqn0SV+GoXTc9BBLzwXfNbUsJm4TNbylkCfxhc86BYP86BFOuk0jw/
      X/uSckC5zIqomSBfzk419jHnOvBekfjeuC8mxgkRUQBIoyWMQ0f9yGWvWjmw3S7y
      ZD0VuXDCzm8Tj9oYfaECAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQW
      MBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBQ4D41Pnuv0EoJTZIVLJ8dVH8qqDDANBgkqhkiG9w0BAQsFAAOCAQEAgHwxqSy2
      k6UEucsbal/SjmmbkC7cb0033XSQRR4YDSAiGTZs59gti7NwYm9sZp0avseLT+ek
      72BOI29xzLXnohnIk1tsYqrCo48zAjDx36aIBVEIDprAeuGvl/3SJ7Wkk6hf0QgZ
      JQ5mRE9dRduVshA8WKlzi77mu6sbtYViZ7o3Ib8rVOdhIUXHoOT2884j7u2cys/N
      QlVpf5nB7BBs3IILPkEXePPxaioCA/Jc7hxRzl9ZEEic5c2K2cEYchQ2viVW2y2g
      9eV7UcC/SIzO4QZgnbYp6fwVxZRFeTzXkpKmWOC02RIe+5kqIkWjiKoMdG7uoV+F
      +lv3jM21FDUM8g==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2022-12-09T02:06:49Z"
    name: kube-root-ca.crt
    namespace: kafkaplaypen
    resourceVersion: "900"
    uid: ba05bf0e-484b-4b49-8a0e-9881cc9d6339
kind: List
metadata:
  resourceVersion: ""
